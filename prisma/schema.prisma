generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model typesusers {
  typeuser_id Int     @id @default(autoincrement()) @db.SmallInt
  typeuser    String? @db.VarChar(100)
  users       users[]
}

model users {
  user_id     Int         @id @default(autoincrement())
  name        String?     @db.VarChar(100)
  password    String?     @db.VarChar(120)
  typeuser_id Int?        @db.SmallInt
  email       String?     @db.VarChar(255)
  active      Int?        @db.SmallInt
  clientes    clientes[]
  typesusers  typesusers? @relation(fields: [typeuser_id], references: [typeuser_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_typeuser_id")
}


model clientes {
  cliente_id     Int         @id @default(autoincrement())
  nombre         String      @db.VarChar(80)
  apellidos      String?     @db.VarChar(120)
  telefono       String?     @db.VarChar(20)
  email          String?     @db.VarChar(150)
  user_id        Int?        @db.Integer
  fecha          DateTime?   @db.Date
  activo         Int?        @db.SmallInt
  ordenespagos   ordenespagos[]
  users          users? @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id")
}

model status {
  status_id Int     @id @default(autoincrement()) @db.SmallInt
  status            String? @db.VarChar(100)
  ordenespagos     ordenespagos[]
}

model ordenespagos {
  orden_pago_id     Int         @id @default(autoincrement())
  cliente_id        Int         @db.Integer
  monto             Float       @db.Real
  codigo_web        String?     @db.VarChar(600)
  status_id         Int?        @db.SmallInt
  customer          String?     @db.VarChar(150)
  order_id          String?     @db.VarChar(150)
  openpay_id        String?     @db.VarChar(150)
  fecha             DateTime?   @db.Date
  fechapago         DateTime?   @db.Date
  status            status? @relation(fields: [status_id], references: [status_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_status_id")
  clientes          clientes? @relation(fields: [cliente_id], references: [cliente_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_pagos_id")
}
